{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\tonyt\\\\projects\\\\hack kstate JTK\\\\HackKstate2024\\\\my-react-app\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\n\n// Spotify API credentials\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst clientId = 'c4e4950088434c8d842394760ae0280a';\nconst clientSecret = '57e542558805452a88c59a8eb84742dd';\nconst redirectUri = 'http://localhost:3000/callback';\nconst scopes = 'user-library-read user-read-private';\nconst App = () => {\n  _s();\n  const [accessToken, setAccessToken] = useState(null);\n  const [genres, setGenres] = useState([]);\n  const [playlists, setPlaylists] = useState([]);\n  const [tracks, setTracks] = useState([]);\n  const [selectedGenre, setSelectedGenre] = useState('');\n  const [selectedPlaylist, setSelectedPlaylist] = useState('');\n  const [trackDetails, setTrackDetails] = useState(null);\n\n  // Handle Spotify authentication\n  const handleSpotifyAuth = () => {\n    const authUrl = `https://accounts.spotify.com/authorize?client_id=${clientId}&response_type=code&redirect_uri=${encodeURIComponent(redirectUri)}&scope=${encodeURIComponent(scopes)}`;\n    window.location.href = authUrl;\n  };\n\n  // Fetch access token on redirect\n  useEffect(() => {\n    const urlParams = new URLSearchParams(window.location.search);\n    const authorizationCode = urlParams.get('code');\n    if (authorizationCode && !accessToken) {\n      const fetchAccessToken = async () => {\n        const tokenUrl = 'https://accounts.spotify.com/api/token';\n        const body = new URLSearchParams({\n          grant_type: 'authorization_code',\n          code: authorizationCode,\n          redirect_uri: redirectUri\n        });\n        const headers = {\n          'Authorization': 'Basic ' + btoa(clientId + ':' + clientSecret),\n          'Content-Type': 'application/x-www-form-urlencoded'\n        };\n        try {\n          const response = await fetch(tokenUrl, {\n            method: 'POST',\n            headers,\n            body\n          });\n          const data = await response.json();\n          setAccessToken(data.access_token);\n        } catch (error) {\n          console.error('Error fetching access token:', error);\n        }\n      };\n      fetchAccessToken();\n    }\n  }, [accessToken]);\n\n  // Fetch genres from Spotify\n  useEffect(() => {\n    if (accessToken) {\n      const fetchGenres = async () => {\n        const response = await fetch(`https://api.spotify.com/v1/browse/categories?locale=sv_US`, {\n          method: 'GET',\n          headers: {\n            'Authorization': 'Bearer ' + accessToken\n          }\n        });\n        const data = await response.json();\n        setGenres(data.categories.items);\n      };\n      fetchGenres();\n    }\n  }, [accessToken]);\n\n  // Fetch playlists based on selected genre\n  const fetchPlaylistsByGenre = async genreId => {\n    const response = await fetch(`https://api.spotify.com/v1/browse/categories/${genreId}/playlists?limit=10`, {\n      method: 'GET',\n      headers: {\n        'Authorization': 'Bearer ' + accessToken\n      }\n    });\n    const data = await response.json();\n    setPlaylists(data.playlists.items);\n  };\n\n  // Fetch tracks based on selected playlist\n  const fetchTracksByPlaylist = async playlistId => {\n    const response = await fetch(`https://api.spotify.com/v1/playlists/${playlistId}/tracks?limit=10`, {\n      method: 'GET',\n      headers: {\n        'Authorization': 'Bearer ' + accessToken\n      }\n    });\n    const data = await response.json();\n    setTracks(data.items);\n  };\n\n  // Fetch details of a selected track\n  const fetchTrackDetails = async trackEndpoint => {\n    const response = await fetch(trackEndpoint, {\n      method: 'GET',\n      headers: {\n        'Authorization': 'Bearer ' + accessToken\n      }\n    });\n    const data = await response.json();\n    setTrackDetails(data);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      backgroundColor: '#4A5568',\n      color: '#FFFFFF',\n      height: '100vh',\n      padding: '20px'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Weather Mood & Spotify Playlist\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 7\n    }, this), accessToken ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Select Genre:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        onChange: e => {\n          setSelectedGenre(e.target.value);\n          fetchPlaylistsByGenre(e.target.value);\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"\",\n          children: \"--Choose a genre--\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 13\n        }, this), genres.map(genre => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: genre.id,\n          children: genre.name\n        }, genre.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 15\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 11\n      }, this), selectedGenre && playlists.length > 0 && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Select Playlist:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          onChange: e => {\n            setSelectedPlaylist(e.target.value);\n            fetchTracksByPlaylist(e.target.value);\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\",\n            children: \"--Choose a playlist--\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 128,\n            columnNumber: 17\n          }, this), playlists.map(playlist => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: playlist.id,\n            children: playlist.name\n          }, playlist.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 130,\n            columnNumber: 19\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true), selectedPlaylist && tracks.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Tracks:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: tracks.map(track => /*#__PURE__*/_jsxDEV(\"li\", {\n            onClick: () => fetchTrackDetails(track.track.href),\n            children: track.track.name\n          }, track.track.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 141,\n            columnNumber: 19\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 13\n      }, this), trackDetails && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Track Details:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n          src: trackDetails.album.images[2].url,\n          alt: trackDetails.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Title: \", trackDetails.name]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Artist: \", trackDetails.artists[0].name]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Click the button below to log in to Spotify:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleSpotifyAuth,\n        style: {\n          padding: '10px 20px',\n          backgroundColor: '#1DB954',\n          color: 'white',\n          border: 'none',\n          borderRadius: '5px',\n          cursor: 'pointer'\n        },\n        children: \"Log in with Spotify\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 105,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"u3RU1Gd2z2OqNnV2iVJ7wD9QTsA=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","Fragment","_Fragment","clientId","clientSecret","redirectUri","scopes","App","_s","accessToken","setAccessToken","genres","setGenres","playlists","setPlaylists","tracks","setTracks","selectedGenre","setSelectedGenre","selectedPlaylist","setSelectedPlaylist","trackDetails","setTrackDetails","handleSpotifyAuth","authUrl","encodeURIComponent","window","location","href","urlParams","URLSearchParams","search","authorizationCode","get","fetchAccessToken","tokenUrl","body","grant_type","code","redirect_uri","headers","btoa","response","fetch","method","data","json","access_token","error","console","fetchGenres","categories","items","fetchPlaylistsByGenre","genreId","fetchTracksByPlaylist","playlistId","fetchTrackDetails","trackEndpoint","style","backgroundColor","color","height","padding","children","fileName","_jsxFileName","lineNumber","columnNumber","onChange","e","target","value","map","genre","id","name","length","playlist","track","onClick","src","album","images","url","alt","artists","border","borderRadius","cursor","_c","$RefreshReg$"],"sources":["C:/Users/tonyt/projects/hack kstate JTK/HackKstate2024/my-react-app/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\n\r\n// Spotify API credentials\r\nconst clientId = 'c4e4950088434c8d842394760ae0280a';\r\nconst clientSecret = '57e542558805452a88c59a8eb84742dd';\r\nconst redirectUri = 'http://localhost:3000/callback';\r\nconst scopes = 'user-library-read user-read-private';\r\n\r\nconst App = () => {\r\n  const [accessToken, setAccessToken] = useState(null);\r\n  const [genres, setGenres] = useState([]);\r\n  const [playlists, setPlaylists] = useState([]);\r\n  const [tracks, setTracks] = useState([]);\r\n  const [selectedGenre, setSelectedGenre] = useState('');\r\n  const [selectedPlaylist, setSelectedPlaylist] = useState('');\r\n  const [trackDetails, setTrackDetails] = useState(null);\r\n\r\n  // Handle Spotify authentication\r\n  const handleSpotifyAuth = () => {\r\n    const authUrl = `https://accounts.spotify.com/authorize?client_id=${clientId}&response_type=code&redirect_uri=${encodeURIComponent(redirectUri)}&scope=${encodeURIComponent(scopes)}`;\r\n    window.location.href = authUrl;\r\n  };\r\n\r\n  // Fetch access token on redirect\r\n  useEffect(() => {\r\n    const urlParams = new URLSearchParams(window.location.search);\r\n    const authorizationCode = urlParams.get('code');\r\n\r\n    if (authorizationCode && !accessToken) {\r\n      const fetchAccessToken = async () => {\r\n        const tokenUrl = 'https://accounts.spotify.com/api/token';\r\n        const body = new URLSearchParams({\r\n          grant_type: 'authorization_code',\r\n          code: authorizationCode,\r\n          redirect_uri: redirectUri,\r\n        });\r\n\r\n        const headers = {\r\n          'Authorization': 'Basic ' + btoa(clientId + ':' + clientSecret),\r\n          'Content-Type': 'application/x-www-form-urlencoded',\r\n        };\r\n\r\n        try {\r\n          const response = await fetch(tokenUrl, {\r\n            method: 'POST',\r\n            headers,\r\n            body,\r\n          });\r\n          const data = await response.json();\r\n          setAccessToken(data.access_token);\r\n        } catch (error) {\r\n          console.error('Error fetching access token:', error);\r\n        }\r\n      };\r\n      fetchAccessToken();\r\n    }\r\n  }, [accessToken]);\r\n\r\n  // Fetch genres from Spotify\r\n  useEffect(() => {\r\n    if (accessToken) {\r\n      const fetchGenres = async () => {\r\n        const response = await fetch(`https://api.spotify.com/v1/browse/categories?locale=sv_US`, {\r\n          method: 'GET',\r\n          headers: { 'Authorization': 'Bearer ' + accessToken },\r\n        });\r\n        const data = await response.json();\r\n        setGenres(data.categories.items);\r\n      };\r\n      fetchGenres();\r\n    }\r\n  }, [accessToken]);\r\n\r\n  // Fetch playlists based on selected genre\r\n  const fetchPlaylistsByGenre = async (genreId) => {\r\n    const response = await fetch(`https://api.spotify.com/v1/browse/categories/${genreId}/playlists?limit=10`, {\r\n      method: 'GET',\r\n      headers: { 'Authorization': 'Bearer ' + accessToken },\r\n    });\r\n    const data = await response.json();\r\n    setPlaylists(data.playlists.items);\r\n  };\r\n\r\n  // Fetch tracks based on selected playlist\r\n  const fetchTracksByPlaylist = async (playlistId) => {\r\n    const response = await fetch(`https://api.spotify.com/v1/playlists/${playlistId}/tracks?limit=10`, {\r\n      method: 'GET',\r\n      headers: { 'Authorization': 'Bearer ' + accessToken },\r\n    });\r\n    const data = await response.json();\r\n    setTracks(data.items);\r\n  };\r\n\r\n  // Fetch details of a selected track\r\n  const fetchTrackDetails = async (trackEndpoint) => {\r\n    const response = await fetch(trackEndpoint, {\r\n      method: 'GET',\r\n      headers: { 'Authorization': 'Bearer ' + accessToken },\r\n    });\r\n    const data = await response.json();\r\n    setTrackDetails(data);\r\n  };\r\n\r\n  return (\r\n    <div style={{ backgroundColor: '#4A5568', color: '#FFFFFF', height: '100vh', padding: '20px' }}>\r\n      <h1>Weather Mood & Spotify Playlist</h1>\r\n      \r\n      {accessToken ? (\r\n        <div>\r\n          <h2>Select Genre:</h2>\r\n          <select onChange={(e) => {\r\n            setSelectedGenre(e.target.value);\r\n            fetchPlaylistsByGenre(e.target.value);\r\n          }}>\r\n            <option value=\"\">--Choose a genre--</option>\r\n            {genres.map(genre => (\r\n              <option key={genre.id} value={genre.id}>{genre.name}</option>\r\n            ))}\r\n          </select>\r\n\r\n          {selectedGenre && playlists.length > 0 && (\r\n            <>\r\n              <h2>Select Playlist:</h2>\r\n              <select onChange={(e) => {\r\n                setSelectedPlaylist(e.target.value);\r\n                fetchTracksByPlaylist(e.target.value);\r\n              }}>\r\n                <option value=\"\">--Choose a playlist--</option>\r\n                {playlists.map(playlist => (\r\n                  <option key={playlist.id} value={playlist.id}>{playlist.name}</option>\r\n                ))}\r\n              </select>\r\n            </>\r\n          )}\r\n\r\n          {selectedPlaylist && tracks.length > 0 && (\r\n            <div>\r\n              <h2>Tracks:</h2>\r\n              <ul>\r\n                {tracks.map(track => (\r\n                  <li key={track.track.id} onClick={() => fetchTrackDetails(track.track.href)}>\r\n                    {track.track.name}\r\n                  </li>\r\n                ))}\r\n              </ul>\r\n            </div>\r\n          )}\r\n\r\n          {trackDetails && (\r\n            <div>\r\n              <h3>Track Details:</h3>\r\n              <img src={trackDetails.album.images[2].url} alt={trackDetails.name} />\r\n              <p>Title: {trackDetails.name}</p>\r\n              <p>Artist: {trackDetails.artists[0].name}</p>\r\n            </div>\r\n          )}\r\n        </div>\r\n      ) : (\r\n        <div>\r\n          <p>Click the button below to log in to Spotify:</p>\r\n          <button onClick={handleSpotifyAuth} style={{ padding: '10px 20px', backgroundColor: '#1DB954', color: 'white', border: 'none', borderRadius: '5px', cursor: 'pointer' }}>\r\n            Log in with Spotify\r\n          </button>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}