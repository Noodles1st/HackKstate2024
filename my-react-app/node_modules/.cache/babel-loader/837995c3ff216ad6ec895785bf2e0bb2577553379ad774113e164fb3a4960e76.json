{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\tonyt\\\\projects\\\\hack kstate JTK\\\\HackKstate2024\\\\my-react-app\\\\src\\\\App.js\";\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst WeatherDisplay = () => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      backgroundColor: '#4A5568',\n      color: '#FFFFFF',\n      height: '100vh',\n      padding: '20px'\n    },\n    children: /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"mood(x)\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 5,\n    columnNumber: 5\n  }, this);\n};\n_c = WeatherDisplay;\nconst clientId = 'c4e4950088434c8d842394760ae0280a';\nconst redirectUri = 'http://localhost:3000/callback';\nconst scopes = 'user-library-read user-read-private'; // Add necessary scopes\nconst authUrl = `https://accounts.spotify.com/authorize?client_id=${clientId}&response_type=code&redirect_uri=${encodeURIComponent(redirectUri)}&scope=${encodeURIComponent(scopes)}`;\nwindow.location.href = authUrl;\nconst tokenUrl = 'https://accounts.spotify.com/api/token';\nconst body = new URLSearchParams({\n  grant_type: 'authorization_code',\n  code: 'AUTHORIZATION_CODE',\n  // Replace with actual authorization code\n  redirect_uri: 'YOUR_REDIRECT_URI'\n});\nconst headers = {\n  'Authorization': 'Basic ' + btoa(clientId + ':' + clientSecret),\n  // Base64 encode client ID and secret\n  'Content-Type': 'application/x-www-form-urlencoded'\n};\nconst response = await fetch(tokenUrl, {\n  method: 'POST',\n  headers,\n  body\n});\nconst data = await response.json();\nconst accessToken = data.access_token; // Store this access token for making API calls\n\nexport default WeatherDisplay;\nvar _c;\n$RefreshReg$(_c, \"WeatherDisplay\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","WeatherDisplay","style","backgroundColor","color","height","padding","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","clientId","redirectUri","scopes","authUrl","encodeURIComponent","window","location","href","tokenUrl","body","URLSearchParams","grant_type","code","redirect_uri","headers","btoa","clientSecret","response","fetch","method","data","json","accessToken","access_token","$RefreshReg$"],"sources":["C:/Users/tonyt/projects/hack kstate JTK/HackKstate2024/my-react-app/src/App.js"],"sourcesContent":["import React from 'react';\n\nconst WeatherDisplay = () => {\n  return (\n    <div style={{ backgroundColor: '#4A5568', color: '#FFFFFF', height: '100vh', padding: '20px' }}>\n      \n      {/* Display weather data here */}\n      <h1>mood(x)</h1>\n    </div>\n  );\n};\n\nconst clientId = 'c4e4950088434c8d842394760ae0280a';\nconst redirectUri = 'http://localhost:3000/callback';\nconst scopes = 'user-library-read user-read-private';  // Add necessary scopes\nconst authUrl = `https://accounts.spotify.com/authorize?client_id=${clientId}&response_type=code&redirect_uri=${encodeURIComponent(redirectUri)}&scope=${encodeURIComponent(scopes)}`;\n\nwindow.location.href = authUrl;\n\n\nconst tokenUrl = 'https://accounts.spotify.com/api/token';\nconst body = new URLSearchParams({\n  grant_type: 'authorization_code',\n  code: 'AUTHORIZATION_CODE',  // Replace with actual authorization code\n  redirect_uri: 'YOUR_REDIRECT_URI',\n});\n\nconst headers = {\n  'Authorization': 'Basic ' + btoa(clientId + ':' + clientSecret),  // Base64 encode client ID and secret\n  'Content-Type': 'application/x-www-form-urlencoded',\n};\n\nconst response = await fetch(tokenUrl, {\n  method: 'POST',\n  headers,\n  body,\n});\n\nconst data = await response.json();\nconst accessToken = data.access_token;  // Store this access token for making API calls\n\n\n\nexport default WeatherDisplay;\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,cAAc,GAAGA,CAAA,KAAM;EAC3B,oBACED,OAAA;IAAKE,KAAK,EAAE;MAAEC,eAAe,EAAE,SAAS;MAAEC,KAAK,EAAE,SAAS;MAAEC,MAAM,EAAE,OAAO;MAAEC,OAAO,EAAE;IAAO,CAAE;IAAAC,QAAA,eAG7FP,OAAA;MAAAO,QAAA,EAAI;IAAO;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACb,CAAC;AAEV,CAAC;AAACC,EAAA,GARIX,cAAc;AAUpB,MAAMY,QAAQ,GAAG,kCAAkC;AACnD,MAAMC,WAAW,GAAG,gCAAgC;AACpD,MAAMC,MAAM,GAAG,qCAAqC,CAAC,CAAE;AACvD,MAAMC,OAAO,GAAG,oDAAoDH,QAAQ,oCAAoCI,kBAAkB,CAACH,WAAW,CAAC,UAAUG,kBAAkB,CAACF,MAAM,CAAC,EAAE;AAErLG,MAAM,CAACC,QAAQ,CAACC,IAAI,GAAGJ,OAAO;AAG9B,MAAMK,QAAQ,GAAG,wCAAwC;AACzD,MAAMC,IAAI,GAAG,IAAIC,eAAe,CAAC;EAC/BC,UAAU,EAAE,oBAAoB;EAChCC,IAAI,EAAE,oBAAoB;EAAG;EAC7BC,YAAY,EAAE;AAChB,CAAC,CAAC;AAEF,MAAMC,OAAO,GAAG;EACd,eAAe,EAAE,QAAQ,GAAGC,IAAI,CAACf,QAAQ,GAAG,GAAG,GAAGgB,YAAY,CAAC;EAAG;EAClE,cAAc,EAAE;AAClB,CAAC;AAED,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAACV,QAAQ,EAAE;EACrCW,MAAM,EAAE,MAAM;EACdL,OAAO;EACPL;AACF,CAAC,CAAC;AAEF,MAAMW,IAAI,GAAG,MAAMH,QAAQ,CAACI,IAAI,CAAC,CAAC;AAClC,MAAMC,WAAW,GAAGF,IAAI,CAACG,YAAY,CAAC,CAAE;;AAIxC,eAAenC,cAAc;AAAC,IAAAW,EAAA;AAAAyB,YAAA,CAAAzB,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}