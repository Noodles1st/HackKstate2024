{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\tonyt\\\\projects\\\\hack kstate JTK\\\\HackKstate2024\\\\my-react-app\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CLIENT_ID = 'c4e4950088434c8d842394760ae0280a';\nconst REDIRECT_URI = 'localhost:3000/callback';\nconst AUTH_ENDPOINT = 'https://accounts.spotify.com/authorize';\nconst RESPONSE_TYPE = 'token';\nfunction App() {\n  _s();\n  var _profile$images$;\n  const [token, setToken] = useState('');\n  const [profile, setProfile] = useState(null);\n\n  // Retrieve token from the URL on initial load or after login redirect\n  useEffect(() => {\n    const hash = window.location.hash;\n    let storedToken = window.localStorage.getItem('token');\n    if (!storedToken && hash) {\n      // Extract the token from the URL hash\n      storedToken = hash.substring(1).split('&').find(elem => elem.startsWith('access_token')).split('=')[1];\n      window.location.hash = ''; // Clear the hash\n      window.localStorage.setItem('token', storedToken); // Save token to local storage\n    }\n    setToken(storedToken); // Set the token in state\n\n    // Automatically fetch profile if token is available\n    if (storedToken) {\n      fetchProfile(storedToken);\n    }\n  }, []);\n  const logout = () => {\n    setToken('');\n    setProfile(null);\n    window.localStorage.removeItem('token');\n  };\n  const fetchProfile = async accessToken => {\n    try {\n      const {\n        data\n      } = await axios.get('https://api.spotify.com/v1/me', {\n        headers: {\n          Authorization: `Bearer ${accessToken}`\n        }\n      });\n      setProfile(data);\n    } catch (err) {\n      console.error('Error fetching profile', err);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"App-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Spotify Profile Viewer\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this), !token ? /*#__PURE__*/_jsxDEV(\"a\", {\n        href: `${AUTH_ENDPOINT}?client_id=${CLIENT_ID}&redirect_uri=${REDIRECT_URI}&response_type=${RESPONSE_TYPE}`,\n        children: \"Login to Spotify\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: logout,\n        children: \"Logout\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 11\n      }, this), token && profile && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: profile.display_name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Followers: \", profile.followers.total]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n          src: (_profile$images$ = profile.images[0]) === null || _profile$images$ === void 0 ? void 0 : _profile$images$.url,\n          alt: \"Profile\",\n          width: \"100\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"4M7PDIAROcykAks4jEUpPpuk0s8=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useState","axios","jsxDEV","_jsxDEV","CLIENT_ID","REDIRECT_URI","AUTH_ENDPOINT","RESPONSE_TYPE","App","_s","_profile$images$","token","setToken","profile","setProfile","hash","window","location","storedToken","localStorage","getItem","substring","split","find","elem","startsWith","setItem","fetchProfile","logout","removeItem","accessToken","data","get","headers","Authorization","err","console","error","className","children","fileName","_jsxFileName","lineNumber","columnNumber","href","onClick","display_name","followers","total","src","images","url","alt","width","_c","$RefreshReg$"],"sources":["C:/Users/tonyt/projects/hack kstate JTK/HackKstate2024/my-react-app/src/App.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport axios from 'axios';\r\n\r\nconst CLIENT_ID = 'c4e4950088434c8d842394760ae0280a';\r\nconst REDIRECT_URI = 'localhost:3000/callback';\r\nconst AUTH_ENDPOINT = 'https://accounts.spotify.com/authorize';\r\nconst RESPONSE_TYPE = 'token';\r\n\r\nfunction App() {\r\n  const [token, setToken] = useState('');\r\n  const [profile, setProfile] = useState(null);\r\n\r\n  // Retrieve token from the URL on initial load or after login redirect\r\n  useEffect(() => {\r\n    const hash = window.location.hash;\r\n    let storedToken = window.localStorage.getItem('token');\r\n\r\n    if (!storedToken && hash) {\r\n      // Extract the token from the URL hash\r\n      storedToken = hash\r\n        .substring(1)\r\n        .split('&')\r\n        .find(elem => elem.startsWith('access_token'))\r\n        .split('=')[1];\r\n\r\n      window.location.hash = '';  // Clear the hash\r\n      window.localStorage.setItem('token', storedToken);  // Save token to local storage\r\n    }\r\n\r\n    setToken(storedToken); // Set the token in state\r\n\r\n    // Automatically fetch profile if token is available\r\n    if (storedToken) {\r\n      fetchProfile(storedToken);\r\n    }\r\n  }, []);\r\n\r\n  const logout = () => {\r\n    setToken('');\r\n    setProfile(null);\r\n    window.localStorage.removeItem('token');\r\n  };\r\n\r\n  const fetchProfile = async (accessToken) => {\r\n    try {\r\n      const { data } = await axios.get('https://api.spotify.com/v1/me', {\r\n        headers: {\r\n          Authorization: `Bearer ${accessToken}`\r\n        }\r\n      });\r\n      setProfile(data);\r\n    } catch (err) {\r\n      console.error('Error fetching profile', err);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <header className=\"App-header\">\r\n        <h1>Spotify Profile Viewer</h1>\r\n        {!token ? (\r\n          <a\r\n            href={`${AUTH_ENDPOINT}?client_id=${CLIENT_ID}&redirect_uri=${REDIRECT_URI}&response_type=${RESPONSE_TYPE}`}\r\n          >\r\n            Login to Spotify\r\n          </a>\r\n        ) : (\r\n          <button onClick={logout}>Logout</button>\r\n        )}\r\n        {token && profile && (\r\n          <div>\r\n            <h2>{profile.display_name}</h2>\r\n            <p>Followers: {profile.followers.total}</p>\r\n            <img src={profile.images[0]?.url} alt=\"Profile\" width=\"100\" />\r\n          </div>\r\n        )}\r\n      </header>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}