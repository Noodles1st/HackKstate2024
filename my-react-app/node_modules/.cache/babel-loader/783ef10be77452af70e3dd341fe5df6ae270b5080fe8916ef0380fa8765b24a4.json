{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\tonyt\\\\projects\\\\hack kstate JTK\\\\HackKstate2024\\\\my-react-app\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst WeatherDisplay = () => {\n  _s();\n  const [accessToken, setAccessToken] = useState(null); // State for access token\n  const [profileData, setProfileData] = useState(null); // State for Spotify profile data\n\n  const clientId = 'c4e4950088434c8d842394760ae0280a';\n  const redirectUri = 'http://localhost:3000/callback';\n  const clientSecret = '57e542558805452a88c59a8eb84742dd';\n  const scopes = 'user-library-read user-read-private';\n\n  // Step 1: Handle the button click to redirect to Spotify\n  const handleSpotifyAuth = () => {\n    const authUrl = `https://accounts.spotify.com/authorize?client_id=${clientId}&response_type=code&redirect_uri=${encodeURIComponent(redirectUri)}&scope=${encodeURIComponent(scopes)}`;\n    window.location.href = authUrl;\n  };\n\n  // Step 2: Handle the redirect back from Spotify and exchange the code for an access token\n  useEffect(() => {\n    const urlParams = new URLSearchParams(window.location.search);\n    const authorizationCode = urlParams.get('code');\n    if (authorizationCode) {\n      // Exchange the authorization code for an access token\n      const fetchAccessToken = async () => {\n        const tokenUrl = 'https://accounts.spotify.com/api/token';\n        const body = new URLSearchParams({\n          grant_type: 'authorization_code',\n          code: authorizationCode,\n          redirect_uri: redirectUri\n        });\n        const headers = {\n          'Authorization': 'Basic ' + btoa(clientId + ':' + clientSecret),\n          'Content-Type': 'application/x-www-form-urlencoded'\n        };\n        try {\n          const response = await fetch(tokenUrl, {\n            method: 'POST',\n            headers,\n            body\n          });\n          const data = await response.json();\n          const newAccessToken = data.access_token;\n          setAccessToken(newAccessToken);\n        } catch (error) {\n          console.error('Error fetching access token:', error);\n        }\n      };\n      fetchAccessToken();\n    }\n  }, []);\n\n  // Step 3: Fetch user profile data after receiving the access token\n  useEffect(() => {\n    if (accessToken) {\n      const fetchProfileData = async () => {\n        try {\n          const response = await fetch('https://api.spotify.com/v1/me', {\n            headers: {\n              'Authorization': 'Bearer ' + accessToken\n            }\n          });\n          const data = await response.json();\n          setProfileData(data); // Store profile data in state\n        } catch (error) {\n          console.error('Error fetching profile data:', error);\n        }\n      };\n      fetchProfileData();\n    }\n  }, [accessToken]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      backgroundColor: '#4A5568',\n      color: '#FFFFFF',\n      height: '100vh',\n      padding: '20px'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"mood(x)\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this), profileData ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [\"Welcome, \", profileData.display_name, \"!\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 11\n      }, this), profileData.images && profileData.images.length > 0 && /*#__PURE__*/_jsxDEV(\"img\", {\n        src: profileData.images[0].url,\n        alt: \"Profile\",\n        style: {\n          borderRadius: '50%',\n          width: '100px',\n          height: '100px'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Email: \", profileData.email]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Followers: \", profileData.followers.total]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 9\n    }, this) : accessToken ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading profile data...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Click the button below to log in to Spotify:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleSpotifyAuth,\n        style: {\n          padding: '10px 20px',\n          backgroundColor: '#1DB954',\n          color: 'white',\n          border: 'none',\n          borderRadius: '5px',\n          cursor: 'pointer'\n        },\n        children: \"Log in with Spotify\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 78,\n    columnNumber: 5\n  }, this);\n};\n_s(WeatherDisplay, \"uPRPsfB1iHPqBbQvbIS/qtvrAAk=\");\n_c = WeatherDisplay;\nexport default WeatherDisplay;\nvar _c;\n$RefreshReg$(_c, \"WeatherDisplay\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","WeatherDisplay","_s","accessToken","setAccessToken","profileData","setProfileData","clientId","redirectUri","clientSecret","scopes","handleSpotifyAuth","authUrl","encodeURIComponent","window","location","href","urlParams","URLSearchParams","search","authorizationCode","get","fetchAccessToken","tokenUrl","body","grant_type","code","redirect_uri","headers","btoa","response","fetch","method","data","json","newAccessToken","access_token","error","console","fetchProfileData","style","backgroundColor","color","height","padding","children","fileName","_jsxFileName","lineNumber","columnNumber","display_name","images","length","src","url","alt","borderRadius","width","email","followers","total","onClick","border","cursor","_c","$RefreshReg$"],"sources":["C:/Users/tonyt/projects/hack kstate JTK/HackKstate2024/my-react-app/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\n\r\nconst WeatherDisplay = () => {\r\n  const [accessToken, setAccessToken] = useState(null);  // State for access token\r\n  const [profileData, setProfileData] = useState(null);  // State for Spotify profile data\r\n\r\n  const clientId = 'c4e4950088434c8d842394760ae0280a';\r\n  const redirectUri = 'http://localhost:3000/callback';\r\n  const clientSecret = '57e542558805452a88c59a8eb84742dd';\r\n  const scopes = 'user-library-read user-read-private';\r\n\r\n  // Step 1: Handle the button click to redirect to Spotify\r\n  const handleSpotifyAuth = () => {\r\n    const authUrl = `https://accounts.spotify.com/authorize?client_id=${clientId}&response_type=code&redirect_uri=${encodeURIComponent(redirectUri)}&scope=${encodeURIComponent(scopes)}`;\r\n    window.location.href = authUrl;\r\n  };\r\n\r\n  // Step 2: Handle the redirect back from Spotify and exchange the code for an access token\r\n  useEffect(() => {\r\n    const urlParams = new URLSearchParams(window.location.search);\r\n    const authorizationCode = urlParams.get('code');\r\n\r\n    if (authorizationCode) {\r\n      // Exchange the authorization code for an access token\r\n      const fetchAccessToken = async () => {\r\n        const tokenUrl = 'https://accounts.spotify.com/api/token';\r\n        const body = new URLSearchParams({\r\n          grant_type: 'authorization_code',\r\n          code: authorizationCode,\r\n          redirect_uri: redirectUri,\r\n        });\r\n\r\n        const headers = {\r\n          'Authorization': 'Basic ' + btoa(clientId + ':' + clientSecret),\r\n          'Content-Type': 'application/x-www-form-urlencoded',\r\n        };\r\n\r\n        try {\r\n          const response = await fetch(tokenUrl, {\r\n            method: 'POST',\r\n            headers,\r\n            body,\r\n          });\r\n          const data = await response.json();\r\n          const newAccessToken = data.access_token;\r\n          setAccessToken(newAccessToken);\r\n        } catch (error) {\r\n          console.error('Error fetching access token:', error);\r\n        }\r\n      };\r\n\r\n      fetchAccessToken();\r\n    }\r\n  }, []);\r\n\r\n  // Step 3: Fetch user profile data after receiving the access token\r\n  useEffect(() => {\r\n    if (accessToken) {\r\n      const fetchProfileData = async () => {\r\n        try {\r\n          const response = await fetch('https://api.spotify.com/v1/me', {\r\n            headers: {\r\n              'Authorization': 'Bearer ' + accessToken,\r\n            },\r\n          });\r\n          const data = await response.json();\r\n          setProfileData(data);  // Store profile data in state\r\n        } catch (error) {\r\n          console.error('Error fetching profile data:', error);\r\n        }\r\n      };\r\n\r\n      fetchProfileData();\r\n    }\r\n  }, [accessToken]);\r\n\r\n  return (\r\n    <div style={{ backgroundColor: '#4A5568', color: '#FFFFFF', height: '100vh', padding: '20px' }}>\r\n      {/* Display weather data and mood */}\r\n      <h1>mood(x)</h1>\r\n      \r\n      {/* Show the profile data if available */}\r\n      {profileData ? (\r\n        <div>\r\n          <h2>Welcome, {profileData.display_name}!</h2>\r\n          {profileData.images && profileData.images.length > 0 && (\r\n            <img src={profileData.images[0].url} alt=\"Profile\" style={{ borderRadius: '50%', width: '100px', height: '100px' }} />\r\n          )}\r\n          <p>Email: {profileData.email}</p>\r\n          <p>Followers: {profileData.followers.total}</p>\r\n        </div>\r\n      ) : accessToken ? (\r\n        <p>Loading profile data...</p>\r\n      ) : (\r\n        <div>\r\n          <p>Click the button below to log in to Spotify:</p>\r\n          <button onClick={handleSpotifyAuth} style={{ padding: '10px 20px', backgroundColor: '#1DB954', color: 'white', border: 'none', borderRadius: '5px', cursor: 'pointer' }}>\r\n            Log in with Spotify\r\n          </button>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default WeatherDisplay;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}